name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create env file
      run: |
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
        echo "ROSPATENT_JWT=${{ secrets.ROSPATENT_JWT }}" >> .env
        echo "GIGACHAT_CLIENT_ID=${{ secrets.GIGACHAT_CLIENT_ID }}" >> .env
        echo "GIGACHAT_CLIENT_SECRET=${{ secrets.GIGACHAT_CLIENT_SECRET }}" >> .env
        echo "LOG_LEVEL=DEBUG" >> .env

    - name: Build Docker images
      run: docker compose build --no-cache

    - name: Run tests
      run: docker compose run --rm tests

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
      if: success()

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      run: |
        docker-compose build
        docker tag zodiak-patent-search-main-web:latest ${{ secrets.DOCKERHUB_USERNAME }}/zodiak-patent-search:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/zodiak-patent-search:latest

    - name: Deploy to server (optional)
      if: env.DEPLOY_HOST
      run: |
        echo "Deploying to server..."
        # Add your deployment commands here
        # Example: ssh, docker pull, docker-compose up, etc.
